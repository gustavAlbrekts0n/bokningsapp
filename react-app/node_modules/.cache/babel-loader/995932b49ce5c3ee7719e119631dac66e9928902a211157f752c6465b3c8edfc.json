{"ast":null,"code":"import'./time-picker.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Time=_ref=>{let{index,date,isBooked}=_ref;const times=[\"07:00 - 11:00\",\"11:00 - 14:00\",\"14:00 - 17:00\",\"17:00 - 21:00\"];return/*#__PURE__*/_jsx(\"div\",{className:\"time\"+(isBooked?\" booked\":\"\"),onClick:()=>{const data={index,date,isBooked};const options={method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)};fetch(\"/api\",options);},children:/*#__PURE__*/_jsx(\"p\",{children:times[index]})});};const TimePicker=_ref2=>{let{selectedDate}=_ref2;const times=[\"07:00 - 11:00\",\"11:00 - 14:00\",\"14:00 - 17:00\",\"17:00 - 21:00\"];const weekdays=[\"Söndag\",\"Måndag\",\"Tisdag\",\"Onsdag\",\"Torsdag\",\"Fredag\",\"Lördag\"];const months=[\"Januari\",\"Februari\",\"Mars\",\"April\",\"Maj\",\"Juni\",\"Juli\",\"Augusti\",\"September\",\"Oktober\",\"November\",\"December\"];const dateString=selectedDate?\"\".concat(weekdays[selectedDate.weekday],\" \").concat(selectedDate.number,\" \").concat(months[selectedDate.month]):\"\";return/*#__PURE__*/_jsxs(\"div\",{className:\"time-picker\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"selected-date\",children:/*#__PURE__*/_jsx(\"p\",{children:selectedDate?dateString:'Välj datum'})}),/*#__PURE__*/_jsx(\"div\",{className:\"time-list\",children:times.map((time,index)=>/*#__PURE__*/_jsx(Time,{index:index,date:selectedDate,isBooked:index%2!==0},index))})]});};export default TimePicker;","map":{"version":3,"names":["jsx","_jsx","jsxs","_jsxs","Time","_ref","index","date","isBooked","times","className","onClick","data","options","method","headers","body","JSON","stringify","fetch","children","TimePicker","_ref2","selectedDate","weekdays","months","dateString","concat","weekday","number","month","map","time"],"sources":["C:/Users/gusta/Filer/React/bokningsapp/react-app/src/components/time-picker.js"],"sourcesContent":["import './time-picker.css';\r\n\r\nconst Time = ({ index, date, isBooked }) => {\r\n    const times = [\r\n        \"07:00 - 11:00\",\r\n        \"11:00 - 14:00\",\r\n        \"14:00 - 17:00\",\r\n        \"17:00 - 21:00\"\r\n    ];\r\n  \r\n    return (\r\n        <div className={\"time\" + (isBooked ? \" booked\" : \"\")} onClick={() => {\r\n            const data = { index, date, isBooked };\r\n            const options = {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(data)\r\n            };\r\n            fetch(\"/api\", options);\r\n        }}>\r\n            <p>{times[index]}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TimePicker = ({ selectedDate }) => {\r\n    const times = [\r\n        \"07:00 - 11:00\",\r\n        \"11:00 - 14:00\",\r\n        \"14:00 - 17:00\",\r\n        \"17:00 - 21:00\"\r\n    ];\r\n\r\n    const weekdays = [\"Söndag\", \"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\"];\r\n    const months = [\"Januari\", \"Februari\", \"Mars\", \"April\", \"Maj\", \"Juni\", \"Juli\", \"Augusti\", \"September\", \"Oktober\", \"November\", \"December\"];\r\n\r\n    const dateString = selectedDate\r\n        ? `${weekdays[selectedDate.weekday]} ${selectedDate.number} ${months[selectedDate.month]}`\r\n        : \"\";\r\n\r\n    return (\r\n        <div className=\"time-picker\">\r\n            <div className=\"selected-date\">\r\n                <p>{selectedDate ? dateString : 'Välj datum'}</p>\r\n            </div>\r\n            <div className=\"time-list\">\r\n                {times.map((time, index) => (\r\n                    <Time\r\n                        key={index}\r\n                        index={index}\r\n                        date={selectedDate}\r\n                        isBooked={index % 2 !== 0}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimePicker;"],"mappings":"AAAA,MAAO,mBAAmB,CAAC,OAAAA,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3B,KAAM,CAAAC,IAAI,CAAGC,IAAA,EAA+B,IAA9B,CAAEC,KAAK,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAAH,IAAA,CACnC,KAAM,CAAAI,KAAK,CAAG,CACV,eAAe,CACf,eAAe,CACf,eAAe,CACf,eAAe,CAClB,CAED,mBACIR,IAAA,QAAKS,SAAS,CAAE,MAAM,EAAIF,QAAQ,CAAG,SAAS,CAAG,EAAE,CAAE,CAACG,OAAO,CAAEA,CAAA,GAAM,CACjE,KAAM,CAAAC,IAAI,CAAG,CAAEN,KAAK,CAAEC,IAAI,CAAEC,QAAS,CAAC,CACtC,KAAM,CAAAK,OAAO,CAAG,CACZC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAC7B,CAAC,CACDO,KAAK,CAAC,MAAM,CAAEN,OAAO,CAAC,CAC1B,CAAE,CAAAO,QAAA,cACEnB,IAAA,MAAAmB,QAAA,CAAIX,KAAK,CAACH,KAAK,CAAC,CAAI,CAAC,CACpB,CAAC,CAEd,CAAC,CAED,KAAM,CAAAe,UAAU,CAAGC,KAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,KAAA,CAChC,KAAM,CAAAb,KAAK,CAAG,CACV,eAAe,CACf,eAAe,CACf,eAAe,CACf,eAAe,CAClB,CAED,KAAM,CAAAe,QAAQ,CAAG,CAAC,QAAQ,CAAE,QAAQ,CAAE,QAAQ,CAAE,QAAQ,CAAE,SAAS,CAAE,QAAQ,CAAE,QAAQ,CAAC,CACxF,KAAM,CAAAC,MAAM,CAAG,CAAC,SAAS,CAAE,UAAU,CAAE,MAAM,CAAE,OAAO,CAAE,KAAK,CAAE,MAAM,CAAE,MAAM,CAAE,SAAS,CAAE,WAAW,CAAE,SAAS,CAAE,UAAU,CAAE,UAAU,CAAC,CAEzI,KAAM,CAAAC,UAAU,CAAGH,YAAY,IAAAI,MAAA,CACtBH,QAAQ,CAACD,YAAY,CAACK,OAAO,CAAC,MAAAD,MAAA,CAAIJ,YAAY,CAACM,MAAM,MAAAF,MAAA,CAAIF,MAAM,CAACF,YAAY,CAACO,KAAK,CAAC,EACtF,EAAE,CAER,mBACI3B,KAAA,QAAKO,SAAS,CAAC,aAAa,CAAAU,QAAA,eACxBnB,IAAA,QAAKS,SAAS,CAAC,eAAe,CAAAU,QAAA,cAC1BnB,IAAA,MAAAmB,QAAA,CAAIG,YAAY,CAAGG,UAAU,CAAG,YAAY,CAAI,CAAC,CAChD,CAAC,cACNzB,IAAA,QAAKS,SAAS,CAAC,WAAW,CAAAU,QAAA,CACrBX,KAAK,CAACsB,GAAG,CAAC,CAACC,IAAI,CAAE1B,KAAK,gBACnBL,IAAA,CAACG,IAAI,EAEDE,KAAK,CAAEA,KAAM,CACbC,IAAI,CAAEgB,YAAa,CACnBf,QAAQ,CAAEF,KAAK,CAAG,CAAC,GAAK,CAAE,EAHrBA,KAIR,CACJ,CAAC,CACD,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAe,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}