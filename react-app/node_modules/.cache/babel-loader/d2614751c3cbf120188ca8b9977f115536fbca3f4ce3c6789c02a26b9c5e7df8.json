{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gusta\\\\Filer\\\\React\\\\bokningsapp\\\\src\\\\month-arrow.js\";\nimport { FaAngleRight, FaAngleLeft } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction calculateNewDay(currentDay, goingRight) {\n  const year = currentDay.getFullYear();\n  const month = currentDay.getMonth();\n\n  // Calculate the new month and adjust the year if needed\n  let newMonth = goingRight ? month + 1 : month - 1;\n  let newYear = year;\n\n  // Handle overflow/underflow of months\n  if (newMonth === 12) {\n    newMonth = 0; // January, reset month to 0 for the next year\n    newYear++;\n  } else if (newMonth === -1) {\n    newMonth = 11; // December, reset month to 11 for the previous year\n    newYear--;\n  }\n\n  // Get day of new month, 1 if going forward, (28/30/31) if going backwards\n  const dayOfNewMonth = 1;\n\n  // Determine the number of days in the new month\n  const daysInNewMonth = new Date(newYear, newMonth + 1, 0).getDate();\n  return {\n    year: newYear,\n    month: newMonth,\n    number: dayOfNewMonth,\n    weekday: currentDay.getDay()\n  };\n}\nfunction MonthArrow(props) {\n  let newDay = calculateNewDay(props.day, props.goingRight);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => props.changeCurrentDay(newDay),\n    children: props.goingRight ? /*#__PURE__*/_jsxDEV(FaAngleRight, {\n      className: \"month-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }, this) : /*#__PURE__*/_jsxDEV(FaAngleLeft, {\n      className: \"month-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 76\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_c = MonthArrow;\nexport default MonthArrow;\nvar _c;\n$RefreshReg$(_c, \"MonthArrow\");","map":{"version":3,"names":["FaAngleRight","FaAngleLeft","jsxDEV","_jsxDEV","calculateNewDay","currentDay","goingRight","year","getFullYear","month","getMonth","newMonth","newYear","dayOfNewMonth","daysInNewMonth","Date","getDate","number","weekday","getDay","MonthArrow","props","newDay","day","onClick","changeCurrentDay","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gusta/Filer/React/bokningsapp/src/month-arrow.js"],"sourcesContent":["import { FaAngleRight , FaAngleLeft } from \"react-icons/fa\";\r\n\r\nfunction calculateNewDay(currentDay, goingRight) {\r\n    \r\n    const year = currentDay.getFullYear();\r\n    const month = currentDay.getMonth();\r\n  \r\n    // Calculate the new month and adjust the year if needed\r\n    let newMonth = goingRight ? month + 1 : month - 1;\r\n    let newYear = year;\r\n  \r\n    // Handle overflow/underflow of months\r\n    if (newMonth === 12) {\r\n      newMonth = 0; // January, reset month to 0 for the next year\r\n      newYear++;\r\n    } else if (newMonth === -1) {\r\n      newMonth = 11; // December, reset month to 11 for the previous year\r\n      newYear--;\r\n    }\r\n\r\n    // Get day of new month, 1 if going forward, (28/30/31) if going backwards\r\n    const dayOfNewMonth = 1;\r\n  \r\n    // Determine the number of days in the new month\r\n    const daysInNewMonth = new Date(newYear, newMonth + 1, 0).getDate();\r\n  \r\n    return {\r\n      year: newYear,\r\n      month: newMonth,\r\n      number: dayOfNewMonth,\r\n      weekday: currentDay.getDay()\r\n    };\r\n}\r\n\r\nfunction MonthArrow(props) {\r\n\r\n    let newDay = calculateNewDay(props.day, props.goingRight);\r\n\r\n    return (\r\n        <div onClick={() => props.changeCurrentDay(newDay)}>\r\n            {props.goingRight ? <FaAngleRight className=\"month-arrow\" /> : <FaAngleLeft className=\"month-arrow\" />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MonthArrow;"],"mappings":";AAAA,SAASA,YAAY,EAAGC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,eAAeA,CAACC,UAAU,EAAEC,UAAU,EAAE;EAE7C,MAAMC,IAAI,GAAGF,UAAU,CAACG,WAAW,CAAC,CAAC;EACrC,MAAMC,KAAK,GAAGJ,UAAU,CAACK,QAAQ,CAAC,CAAC;;EAEnC;EACA,IAAIC,QAAQ,GAAGL,UAAU,GAAGG,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC;EACjD,IAAIG,OAAO,GAAGL,IAAI;;EAElB;EACA,IAAII,QAAQ,KAAK,EAAE,EAAE;IACnBA,QAAQ,GAAG,CAAC,CAAC,CAAC;IACdC,OAAO,EAAE;EACX,CAAC,MAAM,IAAID,QAAQ,KAAK,CAAC,CAAC,EAAE;IAC1BA,QAAQ,GAAG,EAAE,CAAC,CAAC;IACfC,OAAO,EAAE;EACX;;EAEA;EACA,MAAMC,aAAa,GAAG,CAAC;;EAEvB;EACA,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACH,OAAO,EAAED,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;EAEnE,OAAO;IACLT,IAAI,EAAEK,OAAO;IACbH,KAAK,EAAEE,QAAQ;IACfM,MAAM,EAAEJ,aAAa;IACrBK,OAAO,EAAEb,UAAU,CAACc,MAAM,CAAC;EAC7B,CAAC;AACL;AAEA,SAASC,UAAUA,CAACC,KAAK,EAAE;EAEvB,IAAIC,MAAM,GAAGlB,eAAe,CAACiB,KAAK,CAACE,GAAG,EAAEF,KAAK,CAACf,UAAU,CAAC;EAEzD,oBACIH,OAAA;IAAKqB,OAAO,EAAEA,CAAA,KAAMH,KAAK,CAACI,gBAAgB,CAACH,MAAM,CAAE;IAAAI,QAAA,EAC9CL,KAAK,CAACf,UAAU,gBAAGH,OAAA,CAACH,YAAY;MAAC2B,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG5B,OAAA,CAACF,WAAW;MAAC0B,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrG,CAAC;AAEd;AAACC,EAAA,GATQZ,UAAU;AAWnB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}